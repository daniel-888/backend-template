apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: nodejs
  name: nodejs
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: nodejs
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/app-network: "true"
        io.kompose.service: nodejs
    spec:
      containers:
        - args:
            - ./wait-for.sh
            - db:27017
            - --
            - /home/node/app/node_modules/.bin/nodemon
            - index.js
          env:
            - name: MONGO_DB
              valueFrom:
                configMapKeyRef:
                  key: MONGO_DB
                  name: env
            - name: MONGO_HOSTNAME
              value: db
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_PASSWORD
            - name: MONGO_PORT
              valueFrom:
                configMapKeyRef:
                  key: MONGO_PORT
                  name: env
            - name: MONGO_USERNAME
              valueFrom:
                secretKeyRef:
                  key: MONGO_USERNAME
                  name: mongo-secret
          image: nodejs
          name: nodejs
          ports:
            - containerPort: 3000
          resources: {}
          initContainers:
            - name: init-db 
              image: busybox
              command: ['sh', '-c', 'until nc -z db:27017; do echo waiting for db; sleep 2; done;']
          volumeMounts:
            - mountPath: /home/node/app
              name: nodejs-claim0
            - mountPath: /home/node/app/node_modules
              name: node-modules
      restartPolicy: Always
      volumes:
        - name: nodejs-claim0
          persistentVolumeClaim:
            claimName: nodejs-claim0
        - name: node-modules
          persistentVolumeClaim:
            claimName: node-modules
status: {}
